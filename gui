#!/usr/bin/gjs

////////////////////////////
// INTERESSANTE
// Questa è un'altra forma per creare applicazioni
// si crea una classe che nell'init crea un'applicazione
// a cui si associano degli eventi (onStartup e onActivate). Interessante.

// Poi c'è GtkBuilder
// che carica un XML (creato da GLADE, scaricalo da synaptic)
// e genera tutti gli oggetti che servono automaticamente.
// Ho fatto una prova ad intercettare il check_comprimi
// e sembra funzionare
/////////////////////////////

const Lang = imports.lang;
const Gtk = imports.gi.Gtk;

const HelloWorld = new Lang.Class(
{
    Name: 'HelloWorld',

    _init: function() 
	{
        this.application = new Gtk.Application();
        this.application.connect('activate', Lang.bind(this, this._onActivate));
        this.application.connect('startup', Lang.bind(this, this._onStartup));
    },

    _onActivate: function()
	{
        this._window.show_all();
    },

    _onStartup: function() 
	{
        let builder = new Gtk.Builder();
        builder.add_from_file('gui.glade');
        this._window = builder.get_object("window1");
        let oWin = this._window; 
        let oCheck = builder.get_object("check_comprimi");
		oCheck.connect("toggled", function(o)
		{
			if(o.get_active())
				oWin.title = "OOOOhhhhh !!!";
			else
				oWin.title = "Buuuuuuh !!!";
		});
        this.application.add_window(this._window);
    }
});

let app = new HelloWorld();
app.application.run(ARGV);
